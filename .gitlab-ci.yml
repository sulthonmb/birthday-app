
image: tmaier/docker-compose:latest

services:
  - docker:dind

# before_script:
#   - docker info
#   - docker-compose --version

stages:
  # - test
  # - build-stage
  - deploy-stage
  # - build-docker-compose

# Test:
#   stage: test
#   script: 
#     - docker-compose -f docker-compose.test.yml build --pull
#     - docker-compose -f docker-compose.test.yml up --abort-on-container-exit
#     - docker-compose -f docker-compose.test.yml down

# Build Stage:
#   stage: build-stage
#   # when: manual
#   before_script:
#     - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
#     - export APP_IMAGE=$IMAGE:stage-$VERSION_RELEASE
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   #   - export POSTGRES_IMAGE=$IMAGE:postgres
#   #   - export REDIS_IMAGE=$IMAGE:redis
#   script:
#     - docker pull $APP_IMAGE || true
#     - docker-compose -f docker-compose.prod.yml build --pull
#     - docker push $APP_IMAGE
  #   - docker stack deploy preprod -c  docker-compose.prod.yml --with-registry-auth

Deploy Stage:
  stage: deploy-stage 
  image: kroniak/ssh-client
  script:
    - chmod 400 $SSH_PRIVATE_KEY
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$SERVER_STAGING_IP -p 31012 "cd /home/gaali/stage/"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$SERVER_STAGING_IP -p 31012 "rm service-users"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$SERVER_STAGING_IP -p 31012 "git clone $CI_PROJECT_URL.git  "
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$SERVER_STAGING_IP -p 31012 "cd service-users"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY root@$SERVER_STAGING_IP -p 31012 "docker-compose up -d"
# Build Docker Compose:
#   stage: build-docker-compose
#   before_script:
#     - apk add --no-cache py-pip
#     - pip install docker-compose
#   script: 
#     - docker-compose build
#     - docker-compose down
#     - docker-compose up -d --force-recreate